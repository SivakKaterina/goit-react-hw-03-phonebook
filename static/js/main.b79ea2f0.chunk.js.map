{"version":3,"sources":["components/Filter/filter.module.css","components/Section/section.module.css","components/ContactList/contactList.module.css","components/ContactForm/contactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","className","C","form","this","htmlFor","input","id","onChange","type","pattern","title","required","button","Component","ContactList","contacts","onDeleteList","map","onClick","Filter","filter","F","label","Section","children","S","sectionContainer","App","formSubmitHandler","contact","some","toLowerCase","alert","deleteItemList","listId","prevState","changeFilter","console","log","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","normalizedFilter","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b79ea2f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__2JjTb\",\"input\":\"filter_input__3wYWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionContainer\":\"section_sectionContainer__mWIbC\",\"title\":\"section_title__1YlGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"contactList_button__UE5vW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__2iGfW\",\"input\":\"contactForm_input__3tkAw\",\"span\":\"contactForm_span__2syP2\",\"button\":\"contactForm_button__zdpYy\"};","import React, { Component } from 'react';\r\nimport C from './contactForm.module.css'\r\nimport shortid from 'shortid';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value })\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n  \r\n  reset = () => {\r\n    this.setState({ name: '', number: '' })\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n       <form className={C.form} onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>Name</label>\r\n        <input\r\n              className={C.input}\r\n              id={this.nameInputId}\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов.             Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n/>\r\n            <label htmlFor={this.numberInputId}>Number</label>\r\n        <input\r\n              className={C.input}\r\n              id={this.numberInputId}\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d            {1,9}\"\r\n              // title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире,             круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n            <button className={C.button} type=\"submit\">Add contact</button>\r\n      </form>\r\n\r\n    )\r\n  }\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport C from './contactList.module.css'\r\n\r\nconst ContactList = ({contacts, onDeleteList}) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        <span>{name}</span>\r\n        <span>{number}</span>\r\n        <button className={C.button} onClick={() => onDeleteList(id)}>Delete</button>\r\n    </li>\r\n    )\r\n    )}\r\n    \r\n  </ul>\r\n)\r\nexport default ContactList;","import React from 'react';\r\nimport F from './filter.module.css'\r\n\r\n\r\nconst Filter = ({filter, onChange}) => (\r\n  <label className={F.label} >Find contacts by name\r\n  <input className={F.input} type=\"text\" value={filter} onChange={onChange}>\r\n    </input></label>\r\n   \r\n  \r\n   \r\n);\r\n\r\nexport default Filter;","import React from 'react';\r\nimport S from './section.module.css'\r\n\r\nconst Section = ({ title, children }) => (\r\n    <div className={S.sectionContainer}>\r\n    <h2 className={S.title}>{title}</h2>\r\n    {children}\r\n  </div>\r\n  )\r\n  \r\n\r\nexport default Section;\r\n  ","import React, { Component } from \"react\";\nimport shortid from 'shortid';\n// import PropTypes from \"prop-types\";\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter'\nimport Section from \"./components/Section\";\n\nimport contacts from './data/contacts.json'\n\nclass App extends Component{\n  state = {\n    contacts,\n    filter: ''\n \n  };\n\n   componentDidMount() {\n    console.log('Монтирование')\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({contacts:parsedContacts})\n    }\n  };\n\n  componentDidUpdate(prevState) {\n    console.log('Обновление')\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n  \n  formSubmitHandler = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    }    \n   contacts.some(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    )\n      ? alert(`${name} is already in contacts`)\n      : contacts.some(({ number }) => number === contact.number)\n      ? alert(`${number} is already in contacts`)\n      : this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n  };\n\n  deleteItemList = listId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== listId),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const {filter } = this.state;\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter));\n    \n    return (\n      <div className=\"container\">\n        <Section title={'Phonebook'}>\n          <ContactForm onSubmit={this.formSubmitHandler} />\n        </Section>\n\n        <Section title={'Contacts'}>\n          <Filter filter={filter} onChange={this.changeFilter} />\n          <ContactList contacts={visibleContacts} onDeleteList={this.deleteItemList} />\n        </Section>\n        \n        \n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}